appName: #{lower(projectName)}#-#{lower(environment)}#
buildNumber: #{lower(Build.BuildNumber)}#

replicaCount: 1

image:
  repository: #{lower(dockerContainerRegistry)}#.azurecr.io/#{lower(dockerRepository)}#
  pullPolicy: Always
  tag: "latest"

env:
  ASPNETCORE_URLS: "#{envvar.ASPNETCORE_URLS}#"
  DISCOVERY_ADDRESS: "#{envvar.DISCOVERY_ADDRESS}#"
  MIGRATE_DATABASE: "#{envvar.MIGRATE_DATABASE}#"
  ASPNETCORE_ENVIRONMENT: "#{envvar.ASPNETCORE_ENVIRONMENT}#"

volumeMounts:
  - name: #{lower(projectName)}#-#{lower(environment)}#-volume
    mountPath: /dist/#{appSettingsFilename}#
    subPath: #{appSettingsFilename}#
  - name: #{lower(projectName)}#-#{lower(environment)}#-volume
    mountPath: /dist/#{domainSettingsFilename}#
    subPath: #{domainSettingsFilename}#

imagePullSecrets: 
  - name: "akssecret-#{lower(projectName)}#"

service:
  type: ClusterIP
  port: 80
  annotations: {
    'consul.hashicorp.com/service-sync': 'true',
    'consul.hashicorp.com/service-name': #{lower(projectName)}#-#{lower(environment)}#
  }

ingress:
  enabled: false
  className: ""
  annotations:
    {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

autoscaling:
  enabled: true
  minReplicas: 1
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80